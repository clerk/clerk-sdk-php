<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Clerk\Backend\Models\Operations;

use Clerk\Backend\Utils\SpeakeasyMetadata;
class ListAllOrganizationDomainsRequest
{
    /**
     * The ID of the organization to filter domains by
     *
     * @var ?string $organizationId
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=organization_id')]
    public ?string $organizationId = null;

    /**
     * Filter by verification status
     *
     * @var ?Verified $verified
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=verified')]
    public ?Verified $verified = null;

    /**
     * Filter by enrollment mode
     *
     * @var ?array<EnrollmentMode> $enrollmentMode
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=false,name=enrollment_mode')]
    public ?array $enrollmentMode = null;

    /**
     * Search domains by name or organization ID.
     *
     * If the query starts with "org_", it will search by exact organization ID match.
     * Otherwise, it performs a case-insensitive partial match on the domain name.
     *
     * Note: An empty string or whitespace-only value is not allowed and will result in a validation error.
     *
     *
     * @var ?string $query
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=query')]
    public ?string $query = null;

    /**
     * Allows to return organization domains in a particular order.
     *
     * At the moment, you can order the returned domains by their `name` or `created_at`.
     * In order to specify the direction, you can use the `+/-` symbols prepended to the property to order by.
     * For example, if you want domains to be returned in descending order according to their `created_at` property, you can use `-created_at`.
     * If you don't use `+` or `-`, then `+` is implied.
     * Defaults to `-created_at`.
     *
     *
     * @var ?string $orderBy
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=order_by')]
    public ?string $orderBy = null;

    /**
     * Skip the first `offset` results when paginating.
     *
     * Needs to be an integer greater or equal to zero.
     * To be used in conjunction with `limit`.
     *
     * @var ?int $offset
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=offset')]
    public ?int $offset = null;

    /**
     * Applies a limit to the number of results returned.
     *
     * Can be used for paginating the results together with `offset`.
     *
     * @var ?int $limit
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=limit')]
    public ?int $limit = null;

    /**
     * @param  ?string  $organizationId
     * @param  ?Verified  $verified
     * @param  ?array<EnrollmentMode>  $enrollmentMode
     * @param  ?string  $query
     * @param  ?string  $orderBy
     * @param  ?int  $offset
     * @param  ?int  $limit
     * @phpstan-pure
     */
    public function __construct(?string $organizationId = null, ?Verified $verified = null, ?array $enrollmentMode = null, ?string $query = null, ?string $orderBy = '-created_at', ?int $offset = 0, ?int $limit = 10)
    {
        $this->organizationId = $organizationId;
        $this->verified = $verified;
        $this->enrollmentMode = $enrollmentMode;
        $this->query = $query;
        $this->orderBy = $orderBy;
        $this->offset = $offset;
        $this->limit = $limit;
    }
}