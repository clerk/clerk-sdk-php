<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Clerk\Backend\Models\Operations;

use Clerk\Backend\Utils\SpeakeasyMetadata;
class GetCommerceSubscriptionItemListRequest
{
    /**
     * Whether to paginate the results.
     *
     * If true, the results will be paginated.
     * If false, the results will not be paginated.
     *
     * @var ?bool $paginated
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=paginated')]
    public ?bool $paginated = null;

    /**
     * Filter subscription items by status
     *
     * @var ?GetCommerceSubscriptionItemListQueryParamStatus $status
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=status')]
    public ?GetCommerceSubscriptionItemListQueryParamStatus $status = null;

    /**
     * Filter subscription items by payer type
     *
     * @var ?QueryParamPayerType $payerType
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=payer_type')]
    public ?QueryParamPayerType $payerType = null;

    /**
     * Filter subscription items by plan ID
     *
     * @var ?string $planId
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=plan_id')]
    public ?string $planId = null;

    /**
     * Search query to filter subscription items by email, user first name, user last name, or organization name.
     *
     * Supports partial matching.
     *
     * @var ?string $query
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=query')]
    public ?string $query = null;

    /**
     * Filter subscription items by user ID
     *
     * @var ?string $userId
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=user_id')]
    public ?string $userId = null;

    /**
     * Filter subscription items by organization ID
     *
     * @var ?string $organizationId
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=organization_id')]
    public ?string $organizationId = null;

    /**
     * Applies a limit to the number of results returned.
     *
     * Can be used for paginating the results together with `offset`.
     *
     * @var ?int $limit
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=limit')]
    public ?int $limit = null;

    /**
     * Skip the first `offset` results when paginating.
     *
     * Needs to be an integer greater or equal to zero.
     * To be used in conjunction with `limit`.
     *
     * @var ?int $offset
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=offset')]
    public ?int $offset = null;

    /**
     * Whether to include free plan subscription items
     *
     * @var ?bool $includeFree
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=include_free')]
    public ?bool $includeFree = null;

    /**
     * @param  ?bool  $paginated
     * @param  ?int  $limit
     * @param  ?int  $offset
     * @param  ?GetCommerceSubscriptionItemListQueryParamStatus  $status
     * @param  ?QueryParamPayerType  $payerType
     * @param  ?string  $planId
     * @param  ?bool  $includeFree
     * @param  ?string  $query
     * @param  ?string  $userId
     * @param  ?string  $organizationId
     * @phpstan-pure
     */
    public function __construct(?bool $paginated = null, ?GetCommerceSubscriptionItemListQueryParamStatus $status = null, ?QueryParamPayerType $payerType = null, ?string $planId = null, ?string $query = null, ?string $userId = null, ?string $organizationId = null, ?int $limit = 10, ?int $offset = 0, ?bool $includeFree = false)
    {
        $this->paginated = $paginated;
        $this->status = $status;
        $this->payerType = $payerType;
        $this->planId = $planId;
        $this->query = $query;
        $this->userId = $userId;
        $this->organizationId = $organizationId;
        $this->limit = $limit;
        $this->offset = $offset;
        $this->includeFree = $includeFree;
    }
}