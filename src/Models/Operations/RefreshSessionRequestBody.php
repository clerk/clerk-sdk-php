<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Clerk\Backend\Models\Operations;


/** RefreshSessionRequestBody - Refresh session parameters */
class RefreshSessionRequestBody
{
    /**
     * The JWT that is sent via the `__session` cookie from your frontend.
     *
     * Note: this JWT must be associated with the supplied session ID.
     *
     * @var string $expiredToken
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('expired_token')]
    public string $expiredToken;

    /**
     * The JWT that is sent via the `__session` cookie from your frontend.
     *
     * @var string $refreshToken
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('refresh_token')]
    public string $refreshToken;

    /**
     * The origin of the request.
     *
     * @var string $requestOrigin
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('request_origin')]
    public string $requestOrigin;

    /**
     * The headers of the request.
     *
     * @var ?array<string, mixed> $requestHeaders
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('request_headers')]
    #[\Speakeasy\Serializer\Annotation\Type('array<string, mixed>|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?array $requestHeaders = null;

    /**
     * The IP address of the request.
     *
     * @var ?string $requestOriginatingIp
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('request_originating_ip')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $requestOriginatingIp = null;

    /**
     * The format of the response.
     *
     * @var ?Format $format
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('format')]
    #[\Speakeasy\Serializer\Annotation\Type('\Clerk\Backend\Models\Operations\Format|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?Format $format = null;

    /**
     * @param  string  $expiredToken
     * @param  string  $refreshToken
     * @param  string  $requestOrigin
     * @param  ?array<string, mixed>  $requestHeaders
     * @param  ?Format  $format
     * @param  ?string  $requestOriginatingIp
     * @phpstan-pure
     */
    public function __construct(string $expiredToken, string $refreshToken, string $requestOrigin, ?array $requestHeaders = null, ?string $requestOriginatingIp = null, ?Format $format = Format::Token)
    {
        $this->expiredToken = $expiredToken;
        $this->refreshToken = $refreshToken;
        $this->requestOrigin = $requestOrigin;
        $this->requestHeaders = $requestHeaders;
        $this->requestOriginatingIp = $requestOriginatingIp;
        $this->format = $format;
    }
}