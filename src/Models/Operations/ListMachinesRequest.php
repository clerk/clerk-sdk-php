<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Clerk\Backend\Models\Operations;

use Clerk\Backend\Utils\SpeakeasyMetadata;
class ListMachinesRequest
{
    /**
     * Returns machines with ID or name that match the given query. Uses exact match for machine ID and partial match for name.
     *
     * @var ?string $query
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=query')]
    public ?string $query = null;

    /**
     * Applies a limit to the number of results returned.
     *
     * Can be used for paginating the results together with `offset`.
     *
     * @var ?int $limit
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=limit')]
    public ?int $limit = null;

    /**
     * Skip the first `offset` results when paginating.
     *
     * Needs to be an integer greater or equal to zero.
     * To be used in conjunction with `limit`.
     *
     * @var ?int $offset
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=offset')]
    public ?int $offset = null;

    /**
     * Allows to return machines in a particular order.
     *
     * You can order the returned machines by their `name` or `created_at`.
     * To specify the direction, use the `+` or `-` symbols prepended to the property to order by.
     * For example, to return machines in descending order by `created_at`, use `-created_at`.
     * If you don't use `+` or `-`, then `+` is implied.
     * Defaults to `-created_at`.
     *
     * @var ?string $orderBy
     */
    #[SpeakeasyMetadata('queryParam:style=form,explode=true,name=order_by')]
    public ?string $orderBy = null;

    /**
     * @param  ?int  $limit
     * @param  ?int  $offset
     * @param  ?string  $query
     * @param  ?string  $orderBy
     * @phpstan-pure
     */
    public function __construct(?string $query = null, ?int $limit = 10, ?int $offset = 0, ?string $orderBy = '-created_at')
    {
        $this->query = $query;
        $this->limit = $limit;
        $this->offset = $offset;
        $this->orderBy = $orderBy;
    }
}