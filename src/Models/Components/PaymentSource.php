<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Clerk\Backend\Models\Components;


/** PaymentSource - The payment source associated with this subscription. */
class PaymentSource
{
    /**
     * String representing the object's type. Objects of the same type share the same value.
     *
     * @var CommerceSubscriptionItemPaymentSourceObject $object
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('object')]
    #[\Speakeasy\Serializer\Annotation\Type('\Clerk\Backend\Models\Components\CommerceSubscriptionItemPaymentSourceObject')]
    public CommerceSubscriptionItemPaymentSourceObject $object;

    /**
     * Unique identifier for the payment source.
     *
     * @var string $id
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('id')]
    public string $id;

    /**
     * Unique identifier for the payer.
     *
     * @var string $payerId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('payer_id')]
    public string $payerId;

    /**
     * The payment method type.
     *
     * @var PaymentMethod $paymentMethod
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('payment_method')]
    #[\Speakeasy\Serializer\Annotation\Type('\Clerk\Backend\Models\Components\PaymentMethod')]
    public PaymentMethod $paymentMethod;

    /**
     * The payment gateway.
     *
     * @var string $gateway
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('gateway')]
    public string $gateway;

    /**
     * External ID in the payment gateway.
     *
     * @var string $gatewayExternalId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('gateway_external_id')]
    public string $gatewayExternalId;

    /**
     * Last 4 digits of the card (for card payment sources).
     *
     * @var string $last4
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('last4')]
    public string $last4;

    /**
     * Status of the payment source.
     *
     * @var CommerceSubscriptionItemPaymentSourceStatus $status
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('status')]
    #[\Speakeasy\Serializer\Annotation\Type('\Clerk\Backend\Models\Components\CommerceSubscriptionItemPaymentSourceStatus')]
    public CommerceSubscriptionItemPaymentSourceStatus $status;

    /**
     * Type of wallet (if applicable).
     *
     * @var string $walletType
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('wallet_type')]
    public string $walletType;

    /**
     * Type of card (if applicable).
     *
     * @var string $cardType
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('card_type')]
    public string $cardType;

    /**
     * Unix timestamp (in milliseconds) when the payment source was created.
     *
     * @var int $createdAt
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('created_at')]
    public int $createdAt;

    /**
     * Unix timestamp (in milliseconds) when the payment source was last updated.
     *
     * @var int $updatedAt
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('updated_at')]
    public int $updatedAt;

    /**
     * Card expiration year (for card payment sources).
     *
     * @var ?int $expiryYear
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('expiry_year')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?int $expiryYear = null;

    /**
     * Card expiration month (for card payment sources).
     *
     * @var ?int $expiryMonth
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('expiry_month')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?int $expiryMonth = null;

    /**
     * Whether this is the default payment source for the payer.
     *
     * @var ?bool $isDefault
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('is_default')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?bool $isDefault = null;

    /**
     * External account ID in the payment gateway.
     *
     * @var ?string $gatewayExternalAccountId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('gateway_external_account_id')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $gatewayExternalAccountId = null;

    /**
     * Whether this payment source can be removed.
     *
     * @var ?bool $isRemovable
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('is_removable')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?bool $isRemovable = null;

    /**
     * @param  CommerceSubscriptionItemPaymentSourceObject  $object
     * @param  string  $id
     * @param  string  $payerId
     * @param  PaymentMethod  $paymentMethod
     * @param  string  $gateway
     * @param  string  $gatewayExternalId
     * @param  string  $last4
     * @param  CommerceSubscriptionItemPaymentSourceStatus  $status
     * @param  string  $walletType
     * @param  string  $cardType
     * @param  int  $createdAt
     * @param  int  $updatedAt
     * @param  ?int  $expiryYear
     * @param  ?int  $expiryMonth
     * @param  ?bool  $isDefault
     * @param  ?string  $gatewayExternalAccountId
     * @param  ?bool  $isRemovable
     * @phpstan-pure
     */
    public function __construct(CommerceSubscriptionItemPaymentSourceObject $object, string $id, string $payerId, PaymentMethod $paymentMethod, string $gateway, string $gatewayExternalId, string $last4, CommerceSubscriptionItemPaymentSourceStatus $status, string $walletType, string $cardType, int $createdAt, int $updatedAt, ?int $expiryYear = null, ?int $expiryMonth = null, ?bool $isDefault = null, ?string $gatewayExternalAccountId = null, ?bool $isRemovable = null)
    {
        $this->object = $object;
        $this->id = $id;
        $this->payerId = $payerId;
        $this->paymentMethod = $paymentMethod;
        $this->gateway = $gateway;
        $this->gatewayExternalId = $gatewayExternalId;
        $this->last4 = $last4;
        $this->status = $status;
        $this->walletType = $walletType;
        $this->cardType = $cardType;
        $this->createdAt = $createdAt;
        $this->updatedAt = $updatedAt;
        $this->expiryYear = $expiryYear;
        $this->expiryMonth = $expiryMonth;
        $this->isDefault = $isDefault;
        $this->gatewayExternalAccountId = $gatewayExternalAccountId;
        $this->isRemovable = $isRemovable;
    }
}