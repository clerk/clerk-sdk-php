<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Clerk\Backend\Models\Components;


class CommerceSubscriptionItem
{
    /**
     * String representing the object's type. Objects of the same type share the same value.
     *
     * @var CommerceSubscriptionItemObject $object
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('object')]
    #[\Speakeasy\Serializer\Annotation\Type('\Clerk\Backend\Models\Components\CommerceSubscriptionItemObject')]
    public CommerceSubscriptionItemObject $object;

    /**
     * Unique identifier for the subscription item.
     *
     * @var string $id
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('id')]
    public string $id;

    /**
     * Unique identifier for the Clerk instance.
     *
     * @var string $instanceId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('instance_id')]
    public string $instanceId;

    /**
     * Current status of the subscription item.
     *
     * @var CommerceSubscriptionItemStatus $status
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('status')]
    #[\Speakeasy\Serializer\Annotation\Type('\Clerk\Backend\Models\Components\CommerceSubscriptionItemStatus')]
    public CommerceSubscriptionItemStatus $status;

    /**
     * Unique identifier for the associated plan.
     *
     * @var string $planId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('plan_id')]
    public string $planId;

    /**
     * The billing period for this subscription.
     *
     * @var PlanPeriod $planPeriod
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('plan_period')]
    #[\Speakeasy\Serializer\Annotation\Type('\Clerk\Backend\Models\Components\PlanPeriod')]
    public PlanPeriod $planPeriod;

    /**
     * Unique identifier for the payment source.
     *
     * @var string $paymentSourceId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('payment_source_id')]
    public string $paymentSourceId;

    /**
     * Unique identifier for the payer.
     *
     * @var string $payerId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('payer_id')]
    public string $payerId;

    /**
     * Whether this subscription is currently on a free trial.
     *
     * @var bool $isFreeTrial
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('is_free_trial')]
    public bool $isFreeTrial;

    /**
     * Date used for proration calculations.
     *
     * @var string $prorationDate
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('proration_date')]
    public string $prorationDate;

    /**
     * Unix timestamp (in milliseconds) when the subscription was created.
     *
     * @var int $createdAt
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('created_at')]
    public int $createdAt;

    /**
     * Unix timestamp (in milliseconds) when the subscription was last updated.
     *
     * @var int $updatedAt
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('updated_at')]
    public int $updatedAt;

    /**
     * The associated commerce plan.
     *
     * @var ?Plan $plan
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('plan')]
    #[\Speakeasy\Serializer\Annotation\Type('\Clerk\Backend\Models\Components\Plan|null')]
    public ?Plan $plan;

    /**
     * Credit information (only available in PaymentAttempt events).
     *
     * @var ?Credit $credit
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('credit')]
    #[\Speakeasy\Serializer\Annotation\Type('\Clerk\Backend\Models\Components\Credit|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?Credit $credit = null;

    /**
     * The payment source associated with this subscription.
     *
     * @var ?PaymentSource $paymentSource
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('payment_source')]
    #[\Speakeasy\Serializer\Annotation\Type('\Clerk\Backend\Models\Components\PaymentSource|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?PaymentSource $paymentSource = null;

    /**
     * Total amount paid over the lifetime of this subscription.
     *
     * @var ?LifetimePaid $lifetimePaid
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('lifetime_paid')]
    #[\Speakeasy\Serializer\Annotation\Type('\Clerk\Backend\Models\Components\LifetimePaid|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?LifetimePaid $lifetimePaid = null;

    /**
     * Current amount for this subscription.
     *
     * @var ?Amount $amount
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('amount')]
    #[\Speakeasy\Serializer\Annotation\Type('\Clerk\Backend\Models\Components\Amount|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?Amount $amount = null;

    /**
     * Information about the next invoice.
     *
     * @var ?NextInvoice $nextInvoice
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('next_invoice')]
    #[\Speakeasy\Serializer\Annotation\Type('\Clerk\Backend\Models\Components\NextInvoice|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?NextInvoice $nextInvoice = null;

    /**
     * Information about the next payment.
     *
     * @var ?NextPayment $nextPayment
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('next_payment')]
    #[\Speakeasy\Serializer\Annotation\Type('\Clerk\Backend\Models\Components\NextPayment|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?NextPayment $nextPayment = null;

    /**
     * The payer associated with this subscription.
     *
     * @var ?Payer $payer
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('payer')]
    #[\Speakeasy\Serializer\Annotation\Type('\Clerk\Backend\Models\Components\Payer|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?Payer $payer = null;

    /**
     * Unix timestamp (in milliseconds) when the current period started.
     *
     * @var ?int $periodStart
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('period_start')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?int $periodStart = null;

    /**
     * Unix timestamp (in milliseconds) when the current period ends.
     *
     * @var ?int $periodEnd
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('period_end')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?int $periodEnd = null;

    /**
     * Unix timestamp (in milliseconds) when the subscription was canceled.
     *
     * @var ?int $canceledAt
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('canceled_at')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?int $canceledAt = null;

    /**
     * Unix timestamp (in milliseconds) when the subscription became past due.
     *
     * @var ?int $pastDueAt
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('past_due_at')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?int $pastDueAt = null;

    /**
     * Unix timestamp (in milliseconds) when the subscription ended.
     *
     * @var ?int $endedAt
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('ended_at')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?int $endedAt = null;

    /**
     * @param  CommerceSubscriptionItemObject  $object
     * @param  string  $id
     * @param  string  $instanceId
     * @param  CommerceSubscriptionItemStatus  $status
     * @param  string  $planId
     * @param  PlanPeriod  $planPeriod
     * @param  string  $paymentSourceId
     * @param  string  $payerId
     * @param  bool  $isFreeTrial
     * @param  string  $prorationDate
     * @param  int  $createdAt
     * @param  int  $updatedAt
     * @param  ?Plan  $plan
     * @param  ?Credit  $credit
     * @param  ?PaymentSource  $paymentSource
     * @param  ?LifetimePaid  $lifetimePaid
     * @param  ?Amount  $amount
     * @param  ?NextInvoice  $nextInvoice
     * @param  ?NextPayment  $nextPayment
     * @param  ?Payer  $payer
     * @param  ?int  $periodStart
     * @param  ?int  $periodEnd
     * @param  ?int  $canceledAt
     * @param  ?int  $pastDueAt
     * @param  ?int  $endedAt
     * @phpstan-pure
     */
    public function __construct(CommerceSubscriptionItemObject $object, string $id, string $instanceId, CommerceSubscriptionItemStatus $status, string $planId, PlanPeriod $planPeriod, string $paymentSourceId, string $payerId, bool $isFreeTrial, string $prorationDate, int $createdAt, int $updatedAt, ?Plan $plan = null, ?Credit $credit = null, ?PaymentSource $paymentSource = null, ?LifetimePaid $lifetimePaid = null, ?Amount $amount = null, ?NextInvoice $nextInvoice = null, ?NextPayment $nextPayment = null, ?Payer $payer = null, ?int $periodStart = null, ?int $periodEnd = null, ?int $canceledAt = null, ?int $pastDueAt = null, ?int $endedAt = null)
    {
        $this->object = $object;
        $this->id = $id;
        $this->instanceId = $instanceId;
        $this->status = $status;
        $this->planId = $planId;
        $this->planPeriod = $planPeriod;
        $this->paymentSourceId = $paymentSourceId;
        $this->payerId = $payerId;
        $this->isFreeTrial = $isFreeTrial;
        $this->prorationDate = $prorationDate;
        $this->createdAt = $createdAt;
        $this->updatedAt = $updatedAt;
        $this->plan = $plan;
        $this->credit = $credit;
        $this->paymentSource = $paymentSource;
        $this->lifetimePaid = $lifetimePaid;
        $this->amount = $amount;
        $this->nextInvoice = $nextInvoice;
        $this->nextPayment = $nextPayment;
        $this->payer = $payer;
        $this->periodStart = $periodStart;
        $this->periodEnd = $periodEnd;
        $this->canceledAt = $canceledAt;
        $this->pastDueAt = $pastDueAt;
        $this->endedAt = $endedAt;
    }
}